{"ast":null,"code":"var _jsxFileName = \"D:\\\\AUT\\\\4thYear\\\\COMP703_RDProject\\\\Github\\\\SourceCode\\\\tradingvision\\\\src\\\\components\\\\stocktable\\\\test.js\";\nimport * as React from 'react';\nimport { DataGrid, GridToolbarContainer, GridToolbarColumnsButton, GridToolbarFilterButton, GridToolbarExport, GridToolbarDensitySelector } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomToolbar() {\n  return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridToolbarColumnsButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarFilterButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarDensitySelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarExport, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CustomToolbar;\nconst columns = [{\n  field: 'ticker',\n  headerName: 'TICKER',\n  width: 150,\n  editable: true\n}, {\n  field: 'ceiling',\n  headerName: 'CEILING',\n  type: 'number',\n  width: 110,\n  editable: true\n}, {\n  field: 'floor',\n  headerName: 'FLOOR',\n  type: 'number',\n  width: 110,\n  editable: true\n}, {\n  field: 'highest',\n  headerName: 'HIGHEST',\n  type: 'number',\n  width: 110,\n  editable: true\n}, {\n  field: 'lowest',\n  headerName: 'LOWEST',\n  type: 'number',\n  width: 110,\n  editable: true\n}, {\n  field: 'match',\n  headerName: 'MATCH',\n  type: 'number',\n  width: 110,\n  editable: true\n}, {\n  field: 'volume',\n  headerName: 'VOLUME',\n  type: 'number',\n  width: 110,\n  editable: true\n}];\nconst rows = [{\n  ticker: 'ACB',\n  ceiling: 305,\n  floor: 3.7,\n  highest: 67,\n  lowest: 4.3,\n  match: 0.4,\n  volume: 1000\n}, {\n  ticker: 'ACB',\n  ceiling: 305,\n  floor: 3.7,\n  highest: 67,\n  lowest: 4.3,\n  match: 0.4,\n  volume: 1000\n}, {\n  ticker: 'ACB',\n  ceiling: 305,\n  floor: 3.7,\n  highest: 67,\n  lowest: 4.3,\n  match: 0.4,\n  volume: 1000\n} // ('APH', 452, 25.0, 51, 4.9,42.2,1000),\n// ('ASM', 262, 16.0, 24, 6.0,4.8,1000),\n// ('BCM', 159, 6.0, 24, 4.0,9.3,1000),\n// ('BHN', 356, 16.0, 49, 3.9,1.4,1000),\n// ('BID', 408, 3.2, 87, 6.5,1.4,1000),\n// ('BMP', 237, 9.0, 37,1.4, 4.3,1000),\n// ('BVH', 375, 0.0, 94, 0.0,1.4,1000),\n// ('CII', 518, 26.0, 65, 7.0,4.8,1000),\n// ('DCM', 392, 0.2, 98, 0.0,4.8,1000),\n// ('DGC', 318, 0, 81, 2.0,4.8,1000),\n// ('DGW', 360, 19.0, 9,4.8, 37.0,1000),\n// ('DHC', 437, 18.0, 63, 4.0,4.8,1000),\n// ('FLC', 437, 18.0, 63, 4.0,4.8,1000),\n// ('FPT', 437, 18.0, 63, 4.0,4.8,1000),\n// {ticker:'X20', 437, 18.0, 63, 4.0,4.8,1000},\n];\nexport default function DataGridDemo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%',\n      backgroundColor: 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      components: {\n        Toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n_c2 = DataGridDemo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomToolbar\");\n$RefreshReg$(_c2, \"DataGridDemo\");","map":{"version":3,"sources":["D:/AUT/4thYear/COMP703_RDProject/Github/SourceCode/tradingvision/src/components/stocktable/test.js"],"names":["React","DataGrid","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarExport","GridToolbarDensitySelector","CustomToolbar","columns","field","headerName","width","editable","type","rows","ticker","ceiling","floor","highest","lowest","match","volume","DataGridDemo","height","backgroundColor","Toolbar"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  DataGrid,\r\n  GridToolbarContainer,\r\n  GridToolbarColumnsButton,\r\n  GridToolbarFilterButton,\r\n  GridToolbarExport,\r\n  GridToolbarDensitySelector,\r\n} from '@mui/x-data-grid';\r\n\r\n\r\nfunction CustomToolbar() {\r\n  return (\r\n    <GridToolbarContainer>\r\n      <GridToolbarColumnsButton />\r\n      <GridToolbarFilterButton />\r\n      <GridToolbarDensitySelector />\r\n      <GridToolbarExport />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\nconst columns = [\r\n    {\r\n      field: 'ticker',\r\n      headerName: 'TICKER',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n        field: 'ceiling',\r\n        headerName: 'CEILING',\r\n        type: 'number',\r\n        width: 110,\r\n        editable: true,\r\n      },\r\n    {\r\n      field: 'floor',\r\n      headerName: 'FLOOR',\r\n      type: 'number',\r\n      width: 110,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'highest',\r\n      headerName: 'HIGHEST',\r\n      type: 'number',\r\n      width: 110,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'lowest',\r\n      headerName: 'LOWEST',\r\n      type: 'number',\r\n      width: 110,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'match',\r\n      headerName: 'MATCH',\r\n      type: 'number',\r\n      width: 110,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'volume',\r\n      headerName: 'VOLUME',\r\n      type: 'number',\r\n      width: 110,\r\n      editable: true,\r\n    },\r\n  ];\r\n  const rows = [\r\n    {ticker: 'ACB', ceiling: 305, floor: 3.7, highest: 67, lowest: 4.3,match: 0.4,volume: 1000},\r\n    {ticker: 'ACB', ceiling: 305, floor: 3.7, highest: 67, lowest: 4.3,match: 0.4,volume: 1000},\r\n    {ticker: 'ACB', ceiling: 305, floor: 3.7, highest: 67, lowest: 4.3,match: 0.4,volume: 1000},\r\n    // ('APH', 452, 25.0, 51, 4.9,42.2,1000),\r\n    // ('ASM', 262, 16.0, 24, 6.0,4.8,1000),\r\n    // ('BCM', 159, 6.0, 24, 4.0,9.3,1000),\r\n    // ('BHN', 356, 16.0, 49, 3.9,1.4,1000),\r\n    // ('BID', 408, 3.2, 87, 6.5,1.4,1000),\r\n    // ('BMP', 237, 9.0, 37,1.4, 4.3,1000),\r\n    // ('BVH', 375, 0.0, 94, 0.0,1.4,1000),\r\n    // ('CII', 518, 26.0, 65, 7.0,4.8,1000),\r\n    // ('DCM', 392, 0.2, 98, 0.0,4.8,1000),\r\n    // ('DGC', 318, 0, 81, 2.0,4.8,1000),\r\n    // ('DGW', 360, 19.0, 9,4.8, 37.0,1000),\r\n    // ('DHC', 437, 18.0, 63, 4.0,4.8,1000),\r\n    // ('FLC', 437, 18.0, 63, 4.0,4.8,1000),\r\n    // ('FPT', 437, 18.0, 63, 4.0,4.8,1000),\r\n    // {ticker:'X20', 437, 18.0, 63, 4.0,4.8,1000},\r\n  ]; \r\n    \r\n\r\n  export default function DataGridDemo() {\r\n    return (\r\n        <div style={{ height: 400, width: '100%', backgroundColor:'white' }}>\r\n        <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={5}\r\n            components={{\r\n            Toolbar: CustomToolbar,\r\n            }}\r\n        />\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}