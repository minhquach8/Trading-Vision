{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deepmerge;\nexports.isPlainObject = isPlainObject;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nfunction isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\n\nfunction deepmerge(target, source) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    clone: true\n  };\n  const output = options.clone ? (0, _extends2.default)({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}","map":{"version":3,"sources":["D:/AUT/4thYear/COMP703_RDProject/Github/SourceCode/tradingvision/node_modules/@mui/utils/deepmerge.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","deepmerge","isPlainObject","_extends2","item","constructor","target","source","options","clone","output","keys","forEach","key"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,SAAlB;AACAH,OAAO,CAACI,aAAR,GAAwBA,aAAxB;;AAEA,IAAIC,SAAS,GAAGT,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AAEA,SAASO,aAAT,CAAuBE,IAAvB,EAA6B;AAC3B,SAAOA,IAAI,KAAK,IAAT,IAAiB,OAAOA,IAAP,KAAgB,QAAjC,IAA6CA,IAAI,CAACC,WAAL,KAAqBT,MAAzE;AACD;;AAED,SAASK,SAAT,CAAmBK,MAAnB,EAA2BC,MAA3B,EAEG;AAAA,MAFgCC,OAEhC,uEAF0C;AAC3CC,IAAAA,KAAK,EAAE;AADoC,GAE1C;AACD,QAAMC,MAAM,GAAGF,OAAO,CAACC,KAAR,GAAgB,CAAC,GAAGN,SAAS,CAACH,OAAd,EAAuB,EAAvB,EAA2BM,MAA3B,CAAhB,GAAqDA,MAApE;;AAEA,MAAIJ,aAAa,CAACI,MAAD,CAAb,IAAyBJ,aAAa,CAACK,MAAD,CAA1C,EAAoD;AAClDX,IAAAA,MAAM,CAACe,IAAP,CAAYJ,MAAZ,EAAoBK,OAApB,CAA4BC,GAAG,IAAI;AACjC;AACA,UAAIA,GAAG,KAAK,WAAZ,EAAyB;AACvB;AACD;;AAED,UAAIX,aAAa,CAACK,MAAM,CAACM,GAAD,CAAP,CAAb,IAA8BA,GAAG,IAAIP,MAArC,IAA+CJ,aAAa,CAACI,MAAM,CAACO,GAAD,CAAP,CAAhE,EAA+E;AAC7E;AACAH,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcZ,SAAS,CAACK,MAAM,CAACO,GAAD,CAAP,EAAcN,MAAM,CAACM,GAAD,CAApB,EAA2BL,OAA3B,CAAvB;AACD,OAHD,MAGO;AACLE,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcN,MAAM,CAACM,GAAD,CAApB;AACD;AACF,KAZD;AAaD;;AAED,SAAOH,MAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deepmerge;\nexports.isPlainObject = isPlainObject;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nfunction isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\n\nfunction deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? (0, _extends2.default)({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}"]},"metadata":{},"sourceType":"script"}