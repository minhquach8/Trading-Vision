{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISABLE_CSS_TRANSITION = void 0;\nexports.default = createCssVarsProvider;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledEngine = require(\"@mui/styled-engine\");\n\nvar _createSpacing = _interopRequireDefault(require(\"../createTheme/createSpacing\"));\n\nvar _createBreakpoints = _interopRequireDefault(require(\"../createTheme/createBreakpoints\"));\n\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\n\nvar _ThemeProvider = _interopRequireDefault(require(\"../ThemeProvider\"));\n\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\"./getInitColorSchemeScript\"));\n\nvar _useCurrentColorScheme = _interopRequireDefault(require(\"./useCurrentColorScheme\"));\n\nvar _createGetCssVar = _interopRequireDefault(require(\"./createGetCssVar\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"colorSchemes\"],\n      _excluded2 = [\"colorSchemes\"],\n      _excluded3 = [\"components\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nconst DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexports.DISABLE_CSS_TRANSITION = DISABLE_CSS_TRANSITION;\n\nfunction createCssVarsProvider(options) {\n  var _baseTheme$breakpoint;\n\n  const {\n    theme: baseTheme = {},\n    defaultMode: desisgnSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange = false,\n    enableColorScheme = true,\n    prefix: designSystemPrefix = '',\n    shouldSkipGeneratingVar\n  } = options;\n  const systemSpacing = (0, _createSpacing.default)(baseTheme.spacing);\n  const systemBreakpoints = (0, _createBreakpoints.default)((_baseTheme$breakpoint = baseTheme.breakpoints) != null ? _baseTheme$breakpoint : {});\n\n  if (!baseTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !baseTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !baseTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !baseTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : (0, _utils.formatMuiErrorMessage)(19));\n    }\n\n    return value;\n  };\n\n  function CssVarsProvider(_ref) {\n    let {\n      children,\n      theme: themeProp = {},\n      prefix = designSystemPrefix,\n      modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n      attribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\n      defaultMode = desisgnSystemMode,\n      defaultColorScheme = designSystemColorScheme\n    } = _ref;\n    // make sure that baseTheme is always independent of each <CssVarsProvider /> call.\n    // JSON.parse(JSON.stringify(...)) is okay to be used as long as the baseTheme is a plain object.\n    const clonedBaseTheme = React.useMemo(() => JSON.parse(JSON.stringify(baseTheme)), []);\n    const {\n      colorSchemes: baseColorSchemes = {}\n    } = clonedBaseTheme,\n          restBaseTheme = (0, _objectWithoutPropertiesLoose2.default)(clonedBaseTheme, _excluded);\n    const {\n      colorSchemes: colorSchemesProp = {}\n    } = themeProp,\n          restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(themeProp, _excluded2);\n    const hasMounted = React.useRef(false); // eslint-disable-next-line prefer-const\n\n    let _deepmerge = (0, _utils.deepmerge)(restBaseTheme, restThemeProp),\n        {\n      components = {}\n    } = _deepmerge,\n        mergedTheme = (0, _objectWithoutPropertiesLoose2.default)(_deepmerge, _excluded3);\n\n    const colorSchemes = (0, _utils.deepmerge)(baseColorSchemes, colorSchemesProp);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n    const {\n      mode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme\n    } = (0, _useCurrentColorScheme.default)({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      defaultMode\n    });\n\n    const resolvedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (defaultMode === 'dark') {\n          return defaultDarkColorScheme;\n        } // use light color scheme, if default mode is 'light' | 'auto'\n\n\n        return defaultLightColorScheme;\n      }\n\n      return colorScheme;\n    })();\n\n    const {\n      css: rootCss,\n      vars: rootVars\n    } = (0, _cssVarsParser.default)(mergedTheme, {\n      prefix,\n      basePrefix: designSystemPrefix,\n      shouldSkipGeneratingVar\n    });\n    mergedTheme = (0, _extends2.default)({}, mergedTheme, colorSchemes[resolvedColorScheme], {\n      components,\n      colorSchemes,\n      vars: rootVars,\n      spacing: themeProp.spacing ? (0, _createSpacing.default)(themeProp.spacing) : systemSpacing,\n      breakpoints: themeProp.breakpoints ? (0, _createBreakpoints.default)(themeProp.breakpoints) : systemBreakpoints,\n      getCssVar: (0, _createGetCssVar.default)(prefix)\n    });\n    const styleSheet = {};\n    Object.entries(colorSchemes).forEach(_ref2 => {\n      let [key, scheme] = _ref2;\n      const {\n        css,\n        vars\n      } = (0, _cssVarsParser.default)(scheme, {\n        prefix,\n        basePrefix: designSystemPrefix,\n        shouldSkipGeneratingVar\n      });\n      mergedTheme.vars = (0, _utils.deepmerge)(mergedTheme.vars, vars);\n\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n\n        return defaultColorScheme.light;\n      })();\n\n      if (key === resolvedDefaultColorScheme) {\n        styleSheet[':root'] = css;\n      } else {\n        styleSheet[`[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n    React.useEffect(() => {\n      if (colorScheme) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        document.documentElement.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute]);\n    (0, _utils.unstable_useEnhancedEffect)(() => {\n      if (!mode || !enableColorScheme) {\n        return undefined;\n      }\n\n      const priorColorScheme = document.documentElement.style.getPropertyValue('color-scheme'); // `color-scheme` tells browser to render built-in elements according to its value: `light` or `dark`\n\n      if (mode === 'system') {\n        document.documentElement.style.setProperty('color-scheme', systemMode);\n      } else {\n        document.documentElement.style.setProperty('color-scheme', mode);\n      }\n\n      return () => {\n        document.documentElement.style.setProperty('color-scheme', priorColorScheme);\n      };\n    }, [mode, systemMode]);\n    React.useEffect(() => {\n      let timer;\n\n      if (disableTransitionOnChange && hasMounted.current) {\n        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n        const css = document.createElement('style');\n        css.appendChild(document.createTextNode(DISABLE_CSS_TRANSITION));\n        document.head.appendChild(css); // Force browser repaint\n\n        (() => window.getComputedStyle(document.body))();\n\n        timer = setTimeout(() => {\n          document.head.removeChild(css);\n        }, 1);\n      }\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(ColorSchemeContext.Provider, {\n      value: {\n        mode,\n        setMode,\n        lightColorScheme,\n        darkColorScheme,\n        colorScheme,\n        setColorScheme,\n        allColorSchemes\n      },\n      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: {\n          ':root': rootCss\n        }\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: styleSheet\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\n        theme: mergedTheme,\n        children: children\n      })]\n    });\n  }\n\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: _propTypes.default.string,\n\n    /**\n     * The component tree.\n     */\n    children: _propTypes.default.node,\n\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n\n    /**\n     * The initial mode used.\n     */\n    defaultMode: _propTypes.default.string,\n\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: _propTypes.default.string,\n\n    /**\n     * CSS variable prefix.\n     */\n    prefix: _propTypes.default.string,\n\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: _propTypes.default.object\n  } : void 0;\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript: _getInitColorSchemeScript.default\n  };\n}","map":{"version":3,"sources":["D:/AUT/4thYear/COMP703_RDProject/Github/SourceCode/tradingvision/node_modules/@mui/system/cssVars/createCssVarsProvider.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","DISABLE_CSS_TRANSITION","default","createCssVarsProvider","_extends2","_objectWithoutPropertiesLoose2","_utils","React","_interopRequireWildcard","_propTypes","_styledEngine","_createSpacing","_createBreakpoints","_cssVarsParser","_ThemeProvider","_getInitColorSchemeScript","_useCurrentColorScheme","_createGetCssVar","_jsxRuntime","_excluded","_excluded2","_excluded3","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","options","_baseTheme$breakpoint","theme","baseTheme","defaultMode","desisgnSystemMode","defaultColorScheme","designSystemColorScheme","disableTransitionOnChange","enableColorScheme","prefix","designSystemPrefix","shouldSkipGeneratingVar","systemSpacing","spacing","systemBreakpoints","breakpoints","colorSchemes","light","dark","console","error","ColorSchemeContext","createContext","undefined","useColorScheme","useContext","Error","process","env","NODE_ENV","formatMuiErrorMessage","CssVarsProvider","children","themeProp","modeStorageKey","DEFAULT_MODE_STORAGE_KEY","attribute","DEFAULT_ATTRIBUTE","clonedBaseTheme","useMemo","JSON","parse","stringify","baseColorSchemes","restBaseTheme","colorSchemesProp","restThemeProp","hasMounted","useRef","_deepmerge","deepmerge","components","mergedTheme","allColorSchemes","keys","defaultLightColorScheme","defaultDarkColorScheme","mode","setMode","systemMode","lightColorScheme","darkColorScheme","colorScheme","setColorScheme","supportedColorSchemes","resolvedColorScheme","css","rootCss","vars","rootVars","basePrefix","getCssVar","styleSheet","entries","forEach","scheme","resolvedDefaultColorScheme","useEffect","document","documentElement","setAttribute","unstable_useEnhancedEffect","priorColorScheme","style","getPropertyValue","setProperty","timer","current","createElement","appendChild","createTextNode","head","window","getComputedStyle","body","setTimeout","removeChild","clearTimeout","jsxs","Provider","jsx","GlobalStyles","styles","propTypes","string","node","oneOfType","object","getInitColorSchemeScript"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISABLE_CSS_TRANSITION = void 0;\nexports.default = createCssVarsProvider;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledEngine = require(\"@mui/styled-engine\");\n\nvar _createSpacing = _interopRequireDefault(require(\"../createTheme/createSpacing\"));\n\nvar _createBreakpoints = _interopRequireDefault(require(\"../createTheme/createBreakpoints\"));\n\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\n\nvar _ThemeProvider = _interopRequireDefault(require(\"../ThemeProvider\"));\n\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\"./getInitColorSchemeScript\"));\n\nvar _useCurrentColorScheme = _interopRequireDefault(require(\"./useCurrentColorScheme\"));\n\nvar _createGetCssVar = _interopRequireDefault(require(\"./createGetCssVar\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"colorSchemes\"],\n      _excluded2 = [\"colorSchemes\"],\n      _excluded3 = [\"components\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexports.DISABLE_CSS_TRANSITION = DISABLE_CSS_TRANSITION;\n\nfunction createCssVarsProvider(options) {\n  var _baseTheme$breakpoint;\n\n  const {\n    theme: baseTheme = {},\n    defaultMode: desisgnSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange = false,\n    enableColorScheme = true,\n    prefix: designSystemPrefix = '',\n    shouldSkipGeneratingVar\n  } = options;\n  const systemSpacing = (0, _createSpacing.default)(baseTheme.spacing);\n  const systemBreakpoints = (0, _createBreakpoints.default)((_baseTheme$breakpoint = baseTheme.breakpoints) != null ? _baseTheme$breakpoint : {});\n\n  if (!baseTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !baseTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !baseTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !baseTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : (0, _utils.formatMuiErrorMessage)(19));\n    }\n\n    return value;\n  };\n\n  function CssVarsProvider({\n    children,\n    theme: themeProp = {},\n    prefix = designSystemPrefix,\n    modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    attribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\n    defaultMode = desisgnSystemMode,\n    defaultColorScheme = designSystemColorScheme\n  }) {\n    // make sure that baseTheme is always independent of each <CssVarsProvider /> call.\n    // JSON.parse(JSON.stringify(...)) is okay to be used as long as the baseTheme is a plain object.\n    const clonedBaseTheme = React.useMemo(() => JSON.parse(JSON.stringify(baseTheme)), []);\n    const {\n      colorSchemes: baseColorSchemes = {}\n    } = clonedBaseTheme,\n          restBaseTheme = (0, _objectWithoutPropertiesLoose2.default)(clonedBaseTheme, _excluded);\n    const {\n      colorSchemes: colorSchemesProp = {}\n    } = themeProp,\n          restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(themeProp, _excluded2);\n    const hasMounted = React.useRef(false); // eslint-disable-next-line prefer-const\n\n    let _deepmerge = (0, _utils.deepmerge)(restBaseTheme, restThemeProp),\n        {\n      components = {}\n    } = _deepmerge,\n        mergedTheme = (0, _objectWithoutPropertiesLoose2.default)(_deepmerge, _excluded3);\n\n    const colorSchemes = (0, _utils.deepmerge)(baseColorSchemes, colorSchemesProp);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n    const {\n      mode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme\n    } = (0, _useCurrentColorScheme.default)({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      defaultMode\n    });\n\n    const resolvedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (defaultMode === 'dark') {\n          return defaultDarkColorScheme;\n        } // use light color scheme, if default mode is 'light' | 'auto'\n\n\n        return defaultLightColorScheme;\n      }\n\n      return colorScheme;\n    })();\n\n    const {\n      css: rootCss,\n      vars: rootVars\n    } = (0, _cssVarsParser.default)(mergedTheme, {\n      prefix,\n      basePrefix: designSystemPrefix,\n      shouldSkipGeneratingVar\n    });\n    mergedTheme = (0, _extends2.default)({}, mergedTheme, colorSchemes[resolvedColorScheme], {\n      components,\n      colorSchemes,\n      vars: rootVars,\n      spacing: themeProp.spacing ? (0, _createSpacing.default)(themeProp.spacing) : systemSpacing,\n      breakpoints: themeProp.breakpoints ? (0, _createBreakpoints.default)(themeProp.breakpoints) : systemBreakpoints,\n      getCssVar: (0, _createGetCssVar.default)(prefix)\n    });\n    const styleSheet = {};\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      const {\n        css,\n        vars\n      } = (0, _cssVarsParser.default)(scheme, {\n        prefix,\n        basePrefix: designSystemPrefix,\n        shouldSkipGeneratingVar\n      });\n      mergedTheme.vars = (0, _utils.deepmerge)(mergedTheme.vars, vars);\n\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n\n        return defaultColorScheme.light;\n      })();\n\n      if (key === resolvedDefaultColorScheme) {\n        styleSheet[':root'] = css;\n      } else {\n        styleSheet[`[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n    React.useEffect(() => {\n      if (colorScheme) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        document.documentElement.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute]);\n    (0, _utils.unstable_useEnhancedEffect)(() => {\n      if (!mode || !enableColorScheme) {\n        return undefined;\n      }\n\n      const priorColorScheme = document.documentElement.style.getPropertyValue('color-scheme'); // `color-scheme` tells browser to render built-in elements according to its value: `light` or `dark`\n\n      if (mode === 'system') {\n        document.documentElement.style.setProperty('color-scheme', systemMode);\n      } else {\n        document.documentElement.style.setProperty('color-scheme', mode);\n      }\n\n      return () => {\n        document.documentElement.style.setProperty('color-scheme', priorColorScheme);\n      };\n    }, [mode, systemMode]);\n    React.useEffect(() => {\n      let timer;\n\n      if (disableTransitionOnChange && hasMounted.current) {\n        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n        const css = document.createElement('style');\n        css.appendChild(document.createTextNode(DISABLE_CSS_TRANSITION));\n        document.head.appendChild(css); // Force browser repaint\n\n        (() => window.getComputedStyle(document.body))();\n\n        timer = setTimeout(() => {\n          document.head.removeChild(css);\n        }, 1);\n      }\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(ColorSchemeContext.Provider, {\n      value: {\n        mode,\n        setMode,\n        lightColorScheme,\n        darkColorScheme,\n        colorScheme,\n        setColorScheme,\n        allColorSchemes\n      },\n      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: {\n          ':root': rootCss\n        }\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: styleSheet\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\n        theme: mergedTheme,\n        children: children\n      })]\n    });\n  }\n\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: _propTypes.default.string,\n\n    /**\n     * The component tree.\n     */\n    children: _propTypes.default.node,\n\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n\n    /**\n     * The initial mode used.\n     */\n    defaultMode: _propTypes.default.string,\n\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: _propTypes.default.string,\n\n    /**\n     * CSS variable prefix.\n     */\n    prefix: _propTypes.default.string,\n\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: _propTypes.default.object\n  } : void 0;\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript: _getInitColorSchemeScript.default\n  };\n}"]},"metadata":{},"sourceType":"script"}