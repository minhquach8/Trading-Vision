{"ast":null,"code":"var _jsxFileName = \"D:\\\\AUT\\\\4thYear\\\\COMP703_RDProject\\\\Github\\\\SourceCode\\\\tradingvision\\\\src\\\\components\\\\stocktable\\\\test.js\";\nimport * as React from 'react';\nimport { DataGrid, GridToolbarContainer, GridToolbarColumnsButton, GridToolbarFilterButton, GridToolbarDensitySelector, GridToolbarExport } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomToolbar() {\n  return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridToolbarColumnsButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarFilterButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarDensitySelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarExport, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CustomToolbar;\nconst columns = [{\n  field: 'ticker',\n  headerName: 'Ticker',\n  width: 100\n}, {\n  field: 'ceiling',\n  headerName: 'Ceiling',\n  type: 'number',\n  width: 100\n}, {\n  field: 'floor',\n  headerName: 'Floor',\n  type: 'number',\n  width: 100\n}, {\n  field: 'highest',\n  headerName: 'Highest',\n  type: 'number',\n  width: 100,\n  editable: true\n}, {\n  field: 'lowest',\n  headerName: 'Lowest',\n  type: 'number',\n  width: 100,\n  editable: true\n}, {\n  field: 'match',\n  headerName: 'Match',\n  type: 'number',\n  width: 100,\n  editable: true\n}, {\n  field: 'volume',\n  headerName: 'Volume',\n  type: 'number',\n  width: 100,\n  editable: true\n}];\nconst rows = [{\n  id: 1,\n  ticker: 'ACB',\n  ceiling: 305,\n  floor: 3.7,\n  highest: 67,\n  lowest: 4.3,\n  match: 0.4,\n  volume: 1000\n}, {\n  id: 2,\n  ticker: '',\n  ceiling: 305,\n  floor: 3.7,\n  highest: 67,\n  lowest: 4.3,\n  match: 0.4,\n  volume: 1000\n}, {\n  id: 3,\n  ticker: 'ACB',\n  ceiling: 305,\n  floor: 3.7,\n  highest: 67,\n  lowest: 4.3,\n  match: 0.4,\n  volume: 1000\n}, {\n  id: 3,\n  ticker: 'APH',\n  ceiling: 452,\n  floor: 25.0,\n  highest: 51,\n  lowest: 4.9,\n  match: 42.2,\n  volume: 1000\n}, // { ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 1000 },\n// { ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 1000 },\n// { ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 1000 },\n// { ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 1000 },\n// { ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 1000 },\n{\n  id: 4,\n  ticker: 'BCM',\n  ceiling: 159,\n  floor: 6.0,\n  highest: 24,\n  lowest: 4.0,\n  match: 9.3,\n  volume: 1000\n}, {\n  id: 5,\n  ticker: 'BHN',\n  ceiling: 356,\n  floor: 16.0,\n  highest: 49,\n  lowest: 3.9,\n  match: 1.4,\n  volume: 1000\n} // ('BID', 408, 3.2, 87, 6.5,1.4,1000),\n// ('BMP', 237, 9.0, 37,1.4, 4.3,1000),\n// ('BVH', 375, 0.0, 94, 0.0,1.4,1000),\n// ('CII', 518, 26.0, 65, 7.0,4.8,1000),\n// ('DCM', 392, 0.2, 98, 0.0,4.8,1000),\n// ('DGC', 318, 0, 81, 2.0,4.8,1000),\n// ('DGW', 360, 19.0, 9,4.8, 37.0,1000),\n// ('DHC', 437, 18.0, 63, 4.0,4.8,1000),\n// ('FLC', 437, 18.0, 63, 4.0,4.8,1000),\n// ('FPT', 437, 18.0, 63, 4.0,4.8,1000),\n// {ticker:'X20', 437, 18.0, 63, 4.0,4.8,1000},\n];\nexport default function DataGridDemo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%',\n      backgroundColor: 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      components: {\n        Toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_c2 = DataGridDemo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomToolbar\");\n$RefreshReg$(_c2, \"DataGridDemo\");","map":{"version":3,"sources":["D:/AUT/4thYear/COMP703_RDProject/Github/SourceCode/tradingvision/src/components/stocktable/test.js"],"names":["React","DataGrid","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","GridToolbarExport","CustomToolbar","columns","field","headerName","width","type","editable","rows","id","ticker","ceiling","floor","highest","lowest","match","volume","DataGridDemo","height","backgroundColor","Toolbar"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n    DataGrid,\r\n    GridToolbarContainer,\r\n    GridToolbarColumnsButton,\r\n    GridToolbarFilterButton,\r\n    GridToolbarDensitySelector,\r\n    GridToolbarExport,\r\n} from '@mui/x-data-grid';\r\n\r\n\r\nfunction CustomToolbar() {\r\n  return (\r\n    <GridToolbarContainer>\r\n      <GridToolbarColumnsButton />\r\n      <GridToolbarFilterButton />\r\n      <GridToolbarDensitySelector />\r\n      <GridToolbarExport />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\nconst columns = [\r\n    {\r\n      field: 'ticker',\r\n      headerName: 'Ticker',\r\n      width: 100,\r\n      \r\n    },\r\n    {\r\n        field: 'ceiling',\r\n        headerName: 'Ceiling',\r\n        type: 'number',\r\n        width: 100,\r\n        \r\n      },\r\n    {\r\n      field: 'floor',\r\n      headerName: 'Floor',\r\n      type: 'number',\r\n      width: 100,\r\n      \r\n    },\r\n    {\r\n      field: 'highest',\r\n      headerName: 'Highest',\r\n      type: 'number',\r\n      width: 100,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'lowest',\r\n      headerName: 'Lowest',\r\n      type: 'number',\r\n      width: 100,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'match',\r\n      headerName: 'Match',\r\n      type: 'number',\r\n      width: 100,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'volume',\r\n      headerName: 'Volume',\r\n      type: 'number',\r\n      width: 100,\r\n      editable: true,\r\n    },\r\n  ];\r\n  const rows = [\r\n    { id: 1, ticker: 'ACB', ceiling: 305, floor: 3.7, highest: 67, lowest: 4.3, match: 0.4, volume: 1000 },\r\n    { id: 2, ticker: '', ceiling: 305, floor: 3.7, highest: 67, lowest: 4.3, match: 0.4, volume: 1000 },\r\n    { id: 3, ticker: 'ACB', ceiling: 305, floor: 3.7, highest: 67, lowest: 4.3, match: 0.4, volume: 1000 },\r\n    { id: 3, ticker: 'APH', ceiling: 452, floor: 25.0, highest: 51, lowest: 4.9, match: 42.2, volume: 1000 },\r\n    // { ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 1000 },\r\n    // { ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 1000 },\r\n    // { ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 1000 },\r\n    // { ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 1000 },\r\n    // { ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 1000 },\r\n\r\n    { id: 4, ticker: 'BCM', ceiling: 159, floor: 6.0, highest: 24, lowest: 4.0,match: 9.3,volume: 1000},\r\n    { id: 5, ticker: 'BHN', ceiling: 356, floor: 16.0, highest: 49, lowest: 3.9,match: 1.4,volume: 1000},\r\n    // ('BID', 408, 3.2, 87, 6.5,1.4,1000),\r\n    // ('BMP', 237, 9.0, 37,1.4, 4.3,1000),\r\n    // ('BVH', 375, 0.0, 94, 0.0,1.4,1000),\r\n    // ('CII', 518, 26.0, 65, 7.0,4.8,1000),\r\n    // ('DCM', 392, 0.2, 98, 0.0,4.8,1000),\r\n    // ('DGC', 318, 0, 81, 2.0,4.8,1000),\r\n    // ('DGW', 360, 19.0, 9,4.8, 37.0,1000),\r\n    // ('DHC', 437, 18.0, 63, 4.0,4.8,1000),\r\n    // ('FLC', 437, 18.0, 63, 4.0,4.8,1000),\r\n    // ('FPT', 437, 18.0, 63, 4.0,4.8,1000),\r\n    // {ticker:'X20', 437, 18.0, 63, 4.0,4.8,1000},\r\n  ]; \r\n    \r\n\r\n  export default function DataGridDemo() {\r\n    return (\r\n        <div style={{ height: 400, width: '100%', backgroundColor:'white' }}>\r\n        <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            \r\n            components={{\r\n            Toolbar: CustomToolbar,\r\n            }}\r\n        />\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}