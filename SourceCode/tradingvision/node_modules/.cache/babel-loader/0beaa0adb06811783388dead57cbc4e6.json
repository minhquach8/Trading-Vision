{"ast":null,"code":"var _jsxFileName = \"D:\\\\AUT\\\\4thYear\\\\COMP703_RDProject\\\\Github\\\\SourceCode\\\\tradingvision\\\\src\\\\components\\\\stocktable\\\\test.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid, GridToolbarContainer, GridToolbarColumnsButton, GridToolbarFilterButton, GridToolbarDensitySelector, GridToolbarExport } from '@mui/x-data-grid';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { makeStyles } from \"@mui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: \"#fff\"\n    },\n    type: \"dark\"\n  }\n});\n\nfunction CustomToolbar() {\n  return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridToolbarColumnsButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarFilterButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarDensitySelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridToolbarExport, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CustomToolbar;\nconst columns = [{\n  field: 'ticker',\n  headerName: 'Ticker',\n  width: 150\n}, {\n  field: 'ceiling',\n  headerName: 'Ceiling',\n  type: 'number',\n  width: 150,\n  editable: true\n}, {\n  field: 'floor',\n  headerName: 'Floor',\n  type: 'number',\n  width: 150,\n  editable: true\n}, {\n  field: 'highest',\n  headerName: 'Highest',\n  type: 'number',\n  width: 150,\n  editable: true\n}, {\n  field: 'lowest',\n  headerName: 'Lowest',\n  type: 'number',\n  width: 150,\n  editable: true\n}, {\n  field: 'match',\n  headerName: 'Match',\n  type: 'number',\n  width: 150,\n  editable: true\n}, {\n  field: 'volume',\n  headerName: 'Volume',\n  type: 'number',\n  width: 150,\n  editable: true\n}];\nconst rows = [{\n  id: 1,\n  ticker: 'ACB',\n  ceiling: 305,\n  floor: 3.7,\n  highest: 67,\n  lowest: 4.3,\n  match: 0.4,\n  volume: 2300\n}, {\n  id: 2,\n  ticker: 'ASM',\n  ceiling: 262,\n  floor: 16.0,\n  highest: 24,\n  lowest: 6.0,\n  match: 4.8,\n  volume: 900\n}, {\n  id: 3,\n  ticker: 'BVH',\n  ceiling: 375,\n  floor: 0.0,\n  highest: 94,\n  lowest: 0.0,\n  match: 1.4,\n  volume: 1000\n}, {\n  id: 3,\n  ticker: 'DGC',\n  ceiling: 318,\n  floor: 0.0,\n  highest: 81,\n  lowest: 2.0,\n  match: 4.8,\n  volume: 1500\n}, {\n  id: 4,\n  ticker: 'BCM',\n  ceiling: 159,\n  floor: 6.0,\n  highest: 24,\n  lowest: 4.0,\n  match: 9.3,\n  volume: 1200\n}, {\n  id: 5,\n  ticker: 'BHN',\n  ceiling: 356,\n  floor: 16.0,\n  highest: 49,\n  lowest: 3.9,\n  match: 1.4,\n  volume: 700\n} // ('BID', 408, 3.2, 87, 6.5,1.4,1000),\n// ('BMP', 237, 9.0, 37,1.4, 4.3,1000),\n// ('BVH', 375, 0.0, 94, 0.0,1.4,1000),\n// ('CII', 518, 26.0, 65, 7.0,4.8,1000),\n// ('DCM', 392, 0.2, 98, 0.0,4.8,1000),\n// ('DGC', 318, 0, 81, 2.0,4.8,1000),\n// ('DGW', 360, 19.0, 9,4.8, 37.0,1000),\n// ('DHC', 437, 18.0, 63, 4.0,4.8,1000),\n// ('FLC', 437, 18.0, 63, 4.0,4.8,1000),\n// ('FPT', 437, 18.0, 63, 4.0,4.8,1000),\n// {ticker:'X20', 437, 18.0, 63, 4.0,4.8,1000},\n];\nconst useStyles = makeStyles({\n  root: {\n    color: 'white'\n  }\n});\nexport default function DataGridDemo() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%',\n        fontFamily: 'Montserrat'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        components: {\n          Toolbar: CustomToolbar\n        },\n        initialState: {\n          sorting: {\n            sortModel: [{\n              field: 'ticker',\n              sort: 'asc'\n            }]\n          }\n        },\n        sx: {\n          boxShadow: 2,\n          border: 2,\n          color: 'white',\n          borderColor: null,\n          '& .MuiDataGrid-cell:hover': {\n            color: 'primary.main'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DataGridDemo, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = DataGridDemo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomToolbar\");\n$RefreshReg$(_c2, \"DataGridDemo\");","map":{"version":3,"sources":["D:/AUT/4thYear/COMP703_RDProject/Github/SourceCode/tradingvision/src/components/stocktable/test.js"],"names":["React","DataGrid","GridToolbarContainer","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","GridToolbarExport","createTheme","ThemeProvider","makeStyles","darkTheme","palette","primary","main","type","CustomToolbar","columns","field","headerName","width","editable","rows","id","ticker","ceiling","floor","highest","lowest","match","volume","useStyles","root","color","DataGridDemo","classes","height","fontFamily","Toolbar","sorting","sortModel","sort","boxShadow","border","borderColor"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACIC,QADJ,EAEIC,oBAFJ,EAGIC,wBAHJ,EAIIC,uBAJJ,EAKIC,0BALJ,EAMIC,iBANJ,QAOO,kBAPP;AAQA,SACIC,WADJ,EAEIC,aAFJ,QAGW,sBAHX;AAIA,SAASC,UAAT,QAA2B,aAA3B;;AACA,MAAMC,SAAS,GAAGH,WAAW,CAAC;AAC1BI,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC,KADF;AAIPC,IAAAA,IAAI,EAAE;AAJC;AADiB,CAAD,CAA7B;;AASA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,oBAAD;AAAA,4BACE,QAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQA,a;AAUT,MAAMC,OAAO,GAAG,CACZ;AACEC,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,UAAU,EAAE,QAFd;AAGEC,EAAAA,KAAK,EAAE;AAHT,CADY,EAOZ;AACIF,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,UAAU,EAAE,SAFhB;AAGIJ,EAAAA,IAAI,EAAE,QAHV;AAIIK,EAAAA,KAAK,EAAE,GAJX;AAKIC,EAAAA,QAAQ,EAAE;AALd,CAPY,EAcZ;AACEH,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,UAAU,EAAE,OAFd;AAGEJ,EAAAA,IAAI,EAAE,QAHR;AAIEK,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CAdY,EAsBZ;AACEH,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,UAAU,EAAE,SAFd;AAGEJ,EAAAA,IAAI,EAAE,QAHR;AAIEK,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CAtBY,EA6BZ;AACEH,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,UAAU,EAAE,QAFd;AAGEJ,EAAAA,IAAI,EAAE,QAHR;AAIEK,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CA7BY,EAoCZ;AACEH,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,UAAU,EAAE,OAFd;AAGEJ,EAAAA,IAAI,EAAE,QAHR;AAIEK,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CApCY,EA2CZ;AACEH,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,UAAU,EAAE,QAFd;AAGEJ,EAAAA,IAAI,EAAE,QAHR;AAIEK,EAAAA,KAAK,EAAE,GAJT;AAKEC,EAAAA,QAAQ,EAAE;AALZ,CA3CY,CAAhB;AAmDE,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,MAAM,EAAE,KAAjB;AAAwBC,EAAAA,OAAO,EAAE,GAAjC;AAAsCC,EAAAA,KAAK,EAAE,GAA7C;AAAkDC,EAAAA,OAAO,EAAE,EAA3D;AAA+DC,EAAAA,MAAM,EAAE,GAAvE;AAA4EC,EAAAA,KAAK,EAAE,GAAnF;AAAwFC,EAAAA,MAAM,EAAE;AAAhG,CADW,EAEX;AAAEP,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,MAAM,EAAE,KAAjB;AAAwBC,EAAAA,OAAO,EAAE,GAAjC;AAAsCC,EAAAA,KAAK,EAAE,IAA7C;AAAmDC,EAAAA,OAAO,EAAE,EAA5D;AAAgEC,EAAAA,MAAM,EAAE,GAAxE;AAA6EC,EAAAA,KAAK,EAAE,GAApF;AAAyFC,EAAAA,MAAM,EAAE;AAAjG,CAFW,EAGX;AAAEP,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,MAAM,EAAE,KAAjB;AAAwBC,EAAAA,OAAO,EAAE,GAAjC;AAAsCC,EAAAA,KAAK,EAAE,GAA7C;AAAkDC,EAAAA,OAAO,EAAE,EAA3D;AAA+DC,EAAAA,MAAM,EAAE,GAAvE;AAA4EC,EAAAA,KAAK,EAAE,GAAnF;AAAwFC,EAAAA,MAAM,EAAE;AAAhG,CAHW,EAIX;AAAEP,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,MAAM,EAAE,KAAjB;AAAwBC,EAAAA,OAAO,EAAE,GAAjC;AAAsCC,EAAAA,KAAK,EAAE,GAA7C;AAAkDC,EAAAA,OAAO,EAAE,EAA3D;AAA+DC,EAAAA,MAAM,EAAE,GAAvE;AAA4EC,EAAAA,KAAK,EAAE,GAAnF;AAAwFC,EAAAA,MAAM,EAAE;AAAhG,CAJW,EAMX;AAAEP,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,MAAM,EAAE,KAAjB;AAAwBC,EAAAA,OAAO,EAAE,GAAjC;AAAsCC,EAAAA,KAAK,EAAE,GAA7C;AAAkDC,EAAAA,OAAO,EAAE,EAA3D;AAA+DC,EAAAA,MAAM,EAAE,GAAvE;AAA2EC,EAAAA,KAAK,EAAE,GAAlF;AAAsFC,EAAAA,MAAM,EAAE;AAA9F,CANW,EAOX;AAAEP,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,MAAM,EAAE,KAAjB;AAAwBC,EAAAA,OAAO,EAAE,GAAjC;AAAsCC,EAAAA,KAAK,EAAE,IAA7C;AAAmDC,EAAAA,OAAO,EAAE,EAA5D;AAAgEC,EAAAA,MAAM,EAAE,GAAxE;AAA4EC,EAAAA,KAAK,EAAE,GAAnF;AAAuFC,EAAAA,MAAM,EAAE;AAA/F,CAPW,CAQX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBW,CAAb;AAoBA,MAAMC,SAAS,GAAGrB,UAAU,CAAC;AAC3BsB,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL;AADqB,CAAD,CAA5B;AAMA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,sBACI,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEpB,SAAtB;AAAA,2BACA;AAAK,MAAA,KAAK,EAAE;AAAEyB,QAAAA,MAAM,EAAE,GAAV;AAAehB,QAAAA,KAAK,EAAE,MAAtB;AAA8BiB,QAAAA,UAAU,EAAE;AAA1C,OAAZ;AAAA,6BAEA,QAAC,QAAD;AACI,QAAA,IAAI,EAAEf,IADV;AAEI,QAAA,OAAO,EAAEL,OAFb;AAII,QAAA,UAAU,EAAE;AACZqB,UAAAA,OAAO,EAAEtB;AADG,SAJhB;AAOI,QAAA,YAAY,EAAE;AACVuB,UAAAA,OAAO,EAAE;AACPC,YAAAA,SAAS,EAAE,CAAC;AAAEtB,cAAAA,KAAK,EAAE,QAAT;AAAmBuB,cAAAA,IAAI,EAAE;AAAzB,aAAD;AADJ;AADC,SAPlB;AAYI,QAAA,EAAE,EAAE;AACAC,UAAAA,SAAS,EAAE,CADX;AAEAC,UAAAA,MAAM,EAAE,CAFR;AAGAV,UAAAA,KAAK,EAAE,OAHP;AAIAW,UAAAA,WAAW,EAAE,IAJb;AAKA,uCAA6B;AACzBX,YAAAA,KAAK,EAAE;AADkB;AAL7B;AAZR;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GA/ByBC,Y;UACNH,S;;;MADMG,Y","sourcesContent":["import * as React from 'react';\r\nimport {\r\n    DataGrid,\r\n    GridToolbarContainer,\r\n    GridToolbarColumnsButton,\r\n    GridToolbarFilterButton,\r\n    GridToolbarDensitySelector,\r\n    GridToolbarExport,\r\n} from '@mui/x-data-grid';\r\nimport { \r\n    createTheme,\r\n    ThemeProvider,\r\n    } from '@mui/material/styles';\r\nimport { makeStyles } from \"@mui/styles\";\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n\r\nfunction CustomToolbar() {\r\n  return (\r\n    <GridToolbarContainer>\r\n      <GridToolbarColumnsButton />\r\n      <GridToolbarFilterButton />\r\n      <GridToolbarDensitySelector />\r\n      <GridToolbarExport />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\nconst columns = [\r\n    {\r\n      field: 'ticker',\r\n      headerName: 'Ticker',\r\n      width: 150,\r\n      \r\n    },\r\n    {\r\n        field: 'ceiling',\r\n        headerName: 'Ceiling',\r\n        type: 'number',\r\n        width: 150,\r\n        editable: true,\r\n      },\r\n    {\r\n      field: 'floor',\r\n      headerName: 'Floor',\r\n      type: 'number',\r\n      width: 150,\r\n      editable: true,\r\n      \r\n    },\r\n    {\r\n      field: 'highest',\r\n      headerName: 'Highest',\r\n      type: 'number',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'lowest',\r\n      headerName: 'Lowest',\r\n      type: 'number',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'match',\r\n      headerName: 'Match',\r\n      type: 'number',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: 'volume',\r\n      headerName: 'Volume',\r\n      type: 'number',\r\n      width: 150,\r\n      editable: true,\r\n    },\r\n  ];\r\n  const rows = [\r\n    { id: 1, ticker: 'ACB', ceiling: 305, floor: 3.7, highest: 67, lowest: 4.3, match: 0.4, volume: 2300 },\r\n    { id: 2, ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 900 },\r\n    { id: 3, ticker: 'BVH', ceiling: 375, floor: 0.0, highest: 94, lowest: 0.0, match: 1.4, volume: 1000 },\r\n    { id: 3, ticker: 'DGC', ceiling: 318, floor: 0.0, highest: 81, lowest: 2.0, match: 4.8, volume: 1500 },\r\n\r\n    { id: 4, ticker: 'BCM', ceiling: 159, floor: 6.0, highest: 24, lowest: 4.0,match: 9.3,volume: 1200},\r\n    { id: 5, ticker: 'BHN', ceiling: 356, floor: 16.0, highest: 49, lowest: 3.9,match: 1.4,volume: 700},\r\n    // ('BID', 408, 3.2, 87, 6.5,1.4,1000),\r\n    // ('BMP', 237, 9.0, 37,1.4, 4.3,1000),\r\n    // ('BVH', 375, 0.0, 94, 0.0,1.4,1000),\r\n    // ('CII', 518, 26.0, 65, 7.0,4.8,1000),\r\n    // ('DCM', 392, 0.2, 98, 0.0,4.8,1000),\r\n    // ('DGC', 318, 0, 81, 2.0,4.8,1000),\r\n    // ('DGW', 360, 19.0, 9,4.8, 37.0,1000),\r\n    // ('DHC', 437, 18.0, 63, 4.0,4.8,1000),\r\n    // ('FLC', 437, 18.0, 63, 4.0,4.8,1000),\r\n    // ('FPT', 437, 18.0, 63, 4.0,4.8,1000),\r\n    // {ticker:'X20', 437, 18.0, 63, 4.0,4.8,1000},\r\n  ]; \r\n  const useStyles = makeStyles({\r\n    root: {\r\n        color: 'white',\r\n    }\r\n    });  \r\n\r\n  export default function DataGridDemo() {\r\n    const classes = useStyles();\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n        <div style={{ height: 400, width: '100%', fontFamily: 'Montserrat'}}>\r\n\r\n        <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            \r\n            components={{\r\n            Toolbar: CustomToolbar,\r\n            }}\r\n            initialState={{\r\n                sorting: {\r\n                  sortModel: [{ field: 'ticker', sort: 'asc' }],\r\n                },\r\n              }}\r\n            sx={{\r\n                boxShadow: 2,\r\n                border: 2,\r\n                color: 'white',\r\n                borderColor: null,\r\n                '& .MuiDataGrid-cell:hover': {\r\n                    color: 'primary.main',\r\n                },\r\n            }}\r\n        />\r\n        </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}