{"ast":null,"code":"var _jsxFileName = \"D:\\\\AUT\\\\4thYear\\\\COMP703_RDProject\\\\Github\\\\SourceCode\\\\tradingvision\\\\src\\\\components\\\\stocktable\\\\test.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid, GridToolbar, gridPageCountSelector, gridPageSelector, useGridApiContext, useGridSelector } from '@mui/x-data-grid';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport TablePagination from '@mui/material/TablePagination';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'; // Styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: \"#fff\"\n    },\n    type: \"dark\"\n  }\n});\nconst useStyles = makeStyles({\n  root: {\n    '&.MuiDataGrid-root .MuiDataGrid-columnHeader:focus, &.MuiDataGrid-root .MuiDataGrid-cell:focus': {\n      outline: 'none'\n    },\n    '&.MuiDataGrid-menuIcon &.MuiDataGrid-menuIconButton \t&.MuiDataGrid-menuOpen': {\n      color: 'white'\n    }\n  }\n});\nconst columns = [{\n  field: 'ticker',\n  headerName: 'Ticker',\n  width: 150\n}, {\n  field: 'ceiling',\n  headerName: 'Ceiling',\n  type: 'number',\n  width: 150\n}, {\n  field: 'floor',\n  headerName: 'Floor',\n  type: 'number',\n  width: 150\n}, {\n  field: 'highest',\n  headerName: 'Highest',\n  type: 'number',\n  width: 150\n}, {\n  field: 'lowest',\n  headerName: 'Lowest',\n  type: 'number',\n  width: 150\n}, {\n  field: 'match',\n  headerName: 'Match',\n  type: 'number',\n  width: 150\n}, {\n  field: 'volume',\n  headerName: 'Volume',\n  type: 'number',\n  width: 150\n}];\nconst rows = [{\n  id: 1,\n  ticker: 'ACB',\n  ceiling: 305,\n  floor: 3.7,\n  highest: 67,\n  lowest: 4.3,\n  match: 0.4,\n  volume: 2300\n}, {\n  id: 2,\n  ticker: 'ASM',\n  ceiling: 262,\n  floor: 16.0,\n  highest: 24,\n  lowest: 6.0,\n  match: 4.8,\n  volume: 900\n}, {\n  id: 3,\n  ticker: 'BVH',\n  ceiling: 375,\n  floor: 0.0,\n  highest: 94,\n  lowest: 0.0,\n  match: 1.4,\n  volume: 1000\n}, {\n  id: 3,\n  ticker: 'DGC',\n  ceiling: 318,\n  floor: 0.0,\n  highest: 81,\n  lowest: 2.0,\n  match: 4.8,\n  volume: 1500\n}, {\n  id: 4,\n  ticker: 'BCM',\n  ceiling: 159,\n  floor: 6.0,\n  highest: 24,\n  lowest: 4.0,\n  match: 9.3,\n  volume: 1200\n}, {\n  id: 5,\n  ticker: 'BHN',\n  ceiling: 356,\n  floor: 16.0,\n  highest: 49,\n  lowest: 3.9,\n  match: 1.4,\n  volume: 700\n}];\n\nfunction CustomPagination() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TablePagination, {\n    component: \"div\",\n    count: rows.length,\n    page: page,\n    onPageChange: handleChangePage,\n    rowsPerPage: rowsPerPage,\n    onRowsPerPageChange: handleChangeRowsPerPage,\n    sx: {\n      color: 'white'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CustomPagination, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = CustomPagination;\nexport function SortedDescendingIcon() {\n  return /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n    className: \"icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 10\n  }, this);\n}\n_c2 = SortedDescendingIcon;\nexport function SortedAscendingIcon() {\n  return /*#__PURE__*/_jsxDEV(ExpandLessIcon, {\n    className: \"icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 10\n  }, this);\n}\n_c3 = SortedAscendingIcon;\nexport default function DataGridDemo() {\n  _s2();\n\n  const history = useNavigate();\n  const [click, setClick] = useState(null);\n\n  const handleOnClick = param => {\n    history(`/stocks/${param}`);\n  };\n\n  const classes = useStyles();\n  const [sortModel, setSortModel] = React.useState([{\n    field: 'rating',\n    sort: 'desc'\n  }]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%',\n        outline: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        disableSelectionOnClick: true,\n        classeName: classes.root,\n        initialState: {\n          sorting: {\n            sortModel: [{\n              field: 'ticker',\n              sort: 'asc'\n            }]\n          }\n        },\n        sortModel: sortModel,\n        onSortModelChange: newSortModel => setSortModel(newSortModel),\n        sx: {\n          color: 'white',\n          font: \"Monsterrat\",\n          display: 'flex',\n          fontWeight: 'bold',\n          cursor: \"pointer\",\n          GridLines: \"none\"\n        },\n        rows: rows,\n        columns: columns,\n        components: {\n          Toolbar: GridToolbar,\n          Pagination: CustomPagination,\n          ColumnSortedDescendingIcon: SortedDescendingIcon,\n          ColumnSortedAscendingIcon: SortedAscendingIcon\n        },\n        onRowClick: params => history(`/stocks/${params.row.ticker}`),\n        showCellRightBorder: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(DataGridDemo, \"IeR/kCoDUZ6GrXHvTKsVhaxV/yI=\", false, function () {\n  return [useNavigate, useStyles];\n});\n\n_c4 = DataGridDemo;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CustomPagination\");\n$RefreshReg$(_c2, \"SortedDescendingIcon\");\n$RefreshReg$(_c3, \"SortedAscendingIcon\");\n$RefreshReg$(_c4, \"DataGridDemo\");","map":{"version":3,"sources":["D:/AUT/4thYear/COMP703_RDProject/Github/SourceCode/tradingvision/src/components/stocktable/test.js"],"names":["React","DataGrid","GridToolbar","gridPageCountSelector","gridPageSelector","useGridApiContext","useGridSelector","createTheme","ThemeProvider","useState","useNavigate","TablePagination","createStyles","makeStyles","ExpandLessIcon","ExpandMoreIcon","darkTheme","palette","primary","main","type","useStyles","root","outline","color","columns","field","headerName","width","rows","id","ticker","ceiling","floor","highest","lowest","match","volume","CustomPagination","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","length","SortedDescendingIcon","SortedAscendingIcon","DataGridDemo","history","click","setClick","handleOnClick","param","classes","sortModel","setSortModel","sort","height","sorting","newSortModel","font","display","fontWeight","cursor","GridLines","Toolbar","Pagination","ColumnSortedDescendingIcon","ColumnSortedAscendingIcon","params","row"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n    DataGrid,\r\n    GridToolbar,\r\n    gridPageCountSelector,\r\n    gridPageSelector,\r\n    useGridApiContext,\r\n    useGridSelector,\r\n} from '@mui/x-data-grid';\r\nimport { \r\n    createTheme,\r\n    ThemeProvider,\r\n    } from '@mui/material/styles';\r\nimport {useState} from 'react'\r\nimport {useNavigate} from 'react-router-dom';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n // Styles\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    '&.MuiDataGrid-root .MuiDataGrid-columnHeader:focus, &.MuiDataGrid-root .MuiDataGrid-cell:focus': {\r\n        outline: 'none',\r\n    },\r\n    '&.MuiDataGrid-menuIcon &.MuiDataGrid-menuIconButton \t&.MuiDataGrid-menuOpen': {\r\n      color: 'white',\r\n    },\r\n  }\r\n});\r\nconst columns = [\r\n    {\r\n      field: 'ticker',\r\n      headerName: 'Ticker',\r\n      width: 150,\r\n      \r\n    },\r\n    {\r\n        field: 'ceiling',\r\n        headerName: 'Ceiling',\r\n        type: 'number',\r\n        width: 150,\r\n        \r\n      },\r\n    {\r\n      field: 'floor',\r\n      headerName: 'Floor',\r\n      type: 'number',\r\n      width: 150,\r\n     \r\n    },\r\n    {\r\n      field: 'highest',\r\n      headerName: 'Highest',\r\n      type: 'number',\r\n      width: 150,\r\n      \r\n    },\r\n    {\r\n      field: 'lowest',\r\n      headerName: 'Lowest',\r\n      type: 'number',\r\n      width: 150,\r\n      \r\n    },\r\n    {\r\n      field: 'match',\r\n      headerName: 'Match',\r\n      type: 'number',\r\n      width: 150,\r\n      \r\n    },\r\n    {\r\n      field: 'volume',\r\n      headerName: 'Volume',\r\n      type: 'number',\r\n      width: 150,\r\n    \r\n    },\r\n  ];\r\nconst rows = [\r\n    { id: 1, ticker: 'ACB', ceiling: 305, floor: 3.7, highest: 67, lowest: 4.3, match: 0.4, volume: 2300 },\r\n    { id: 2, ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 900 },\r\n    { id: 3, ticker: 'BVH', ceiling: 375, floor: 0.0, highest: 94, lowest: 0.0, match: 1.4, volume: 1000 },\r\n    { id: 3, ticker: 'DGC', ceiling: 318, floor: 0.0, highest: 81, lowest: 2.0, match: 4.8, volume: 1500 },\r\n\r\n    { id: 4, ticker: 'BCM', ceiling: 159, floor: 6.0, highest: 24, lowest: 4.0,match: 9.3,volume: 1200},\r\n    { id: 5, ticker: 'BHN', ceiling: 356, floor: 16.0, highest: 49, lowest: 3.9,match: 1.4,volume: 700},\r\n    \r\n  ]; \r\nfunction CustomPagination() {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n\r\n    return (\r\n      <TablePagination\r\n        component=\"div\"\r\n        count = {rows.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        rowsPerPage={rowsPerPage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        sx = {{\r\n          color:'white'\r\n        }}\r\n      />\r\n    );\r\n  }\r\nexport function SortedDescendingIcon() {\r\n  return <ExpandMoreIcon className=\"icon\" />;\r\n}\r\n\r\nexport function SortedAscendingIcon() {\r\n  return <ExpandLessIcon className=\"icon\" />;\r\n}\r\nexport default function DataGridDemo() {\r\n    const history = useNavigate()\r\n    const [click, setClick] = useState(null)\r\n    const handleOnClick = (param)=>{\r\n      (history(`/stocks/${param}`))\r\n    }\r\n    const classes = useStyles();\r\n    const [sortModel, setSortModel] = React.useState([\r\n      {\r\n        field: 'rating',\r\n        sort: 'desc',\r\n      },\r\n    ]);\r\n    return (\r\n      <ThemeProvider theme={darkTheme}>\r\n        <div style={{ height: 400, width: '100%', outline: 'none'}}>\r\n        <DataGrid\r\n            disableSelectionOnClick\r\n            classeName = {classes.root}\r\n            initialState={{\r\n                sorting: {\r\n                  sortModel: [{ field: 'ticker', sort: 'asc' }],\r\n                },\r\n              }}\r\n            sortModel={sortModel}\r\n            onSortModelChange={(newSortModel) => setSortModel(newSortModel)}\r\n            sx={{\r\n                color: 'white',\r\n                font: \"Monsterrat\",\r\n                display:'flex',\r\n                fontWeight: 'bold',\r\n                cursor: \"pointer\",\r\n                GridLines: \"none\"\r\n                }}\r\n            rows={rows}\r\n            columns={columns}\r\n            components={{\r\n            Toolbar: GridToolbar,\r\n            Pagination: CustomPagination,\r\n            ColumnSortedDescendingIcon: SortedDescendingIcon,\r\n            ColumnSortedAscendingIcon: SortedAscendingIcon,\r\n            }}\r\n            onRowClick={(params) => \r\n              history(`/stocks/${params.row.ticker}`)\r\n            }\r\n            showCellRightBorder={false}\r\n            \r\n        />\r\n      \r\n        </div>\r\n    </ThemeProvider>\r\n    );\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}