{"ast":null,"code":"var _jsxFileName = \"D:\\\\AUT\\\\4thYear\\\\COMP703_RDProject\\\\Github\\\\SourceCode\\\\tradingvision\\\\src\\\\components\\\\stocktable\\\\test.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport { DataGrid, GridToolbar, gridPageCountSelector, gridPageSelector, useGridApiContext, useGridSelector } from '@mui/x-data-grid';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Pagination from '@mui/material/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkTheme = createTheme({\n  palette: {\n    primary: {\n      main: \"#fff\"\n    },\n    type: \"dark\"\n  }\n});\nconst columns = [{\n  field: 'ticker',\n  headerName: 'Ticker',\n  width: 150\n}, {\n  field: 'ceiling',\n  headerName: 'Ceiling',\n  type: 'number',\n  width: 150\n}, {\n  field: 'floor',\n  headerName: 'Floor',\n  type: 'number',\n  width: 150\n}, {\n  field: 'highest',\n  headerName: 'Highest',\n  type: 'number',\n  width: 150\n}, {\n  field: 'lowest',\n  headerName: 'Lowest',\n  type: 'number',\n  width: 150\n}, {\n  field: 'match',\n  headerName: 'Match',\n  type: 'number',\n  width: 150\n}, {\n  field: 'volume',\n  headerName: 'Volume',\n  type: 'number',\n  width: 150\n}];\nconst rows = [{\n  id: 1,\n  ticker: 'ACB',\n  ceiling: 305,\n  floor: 3.7,\n  highest: 67,\n  lowest: 4.3,\n  match: 0.4,\n  volume: 2300\n}, {\n  id: 2,\n  ticker: 'ASM',\n  ceiling: 262,\n  floor: 16.0,\n  highest: 24,\n  lowest: 6.0,\n  match: 4.8,\n  volume: 900\n}, {\n  id: 3,\n  ticker: 'BVH',\n  ceiling: 375,\n  floor: 0.0,\n  highest: 94,\n  lowest: 0.0,\n  match: 1.4,\n  volume: 1000\n}, {\n  id: 3,\n  ticker: 'DGC',\n  ceiling: 318,\n  floor: 0.0,\n  highest: 81,\n  lowest: 2.0,\n  match: 4.8,\n  volume: 1500\n}, {\n  id: 4,\n  ticker: 'BCM',\n  ceiling: 159,\n  floor: 6.0,\n  highest: 24,\n  lowest: 4.0,\n  match: 9.3,\n  volume: 1200\n}, {\n  id: 5,\n  ticker: 'BHN',\n  ceiling: 356,\n  floor: 16.0,\n  highest: 49,\n  lowest: 3.9,\n  match: 1.4,\n  volume: 700\n}];\n\nfunction CustomPagination() {\n  _s();\n\n  const apiRef = useGridApiContext();\n  const page = useGridSelector(apiRef, gridPageSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  return /*#__PURE__*/_jsxDEV(Pagination, {\n    color: \"primary\",\n    count: pageCount,\n    page: page + 1,\n    onChange: (event, value) => apiRef.current.setPage(value - 1)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CustomPagination, \"aBxtusrwFI9QGPx0kesDH2nZ6TM=\", false, function () {\n  return [useGridApiContext, useGridSelector, useGridSelector];\n});\n\n_c = CustomPagination;\nexport default function DataGridDemo() {\n  _s2();\n\n  const history = useNavigate();\n  const [click, setClick] = useState(null);\n\n  const handleOnClick = param => {\n    history(`/stocks/${param}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      initialState: {\n        sorting: {\n          sortModel: [{\n            field: 'ticker',\n            sort: 'asc'\n          }]\n        }\n      },\n      sx: {\n        color: 'white',\n        font: \"Monsterrat\",\n        display: 'flex',\n        fontWeight: 'bold',\n        border: null,\n        backgroundColor: 'black'\n      },\n      rows: rows,\n      columns: columns,\n      components: {\n        Toolbar: GridToolbar,\n        color: 'white'\n      },\n      pagination: {\n        color: 'white'\n      },\n      onRowClick: params => history(`/stocks/${params.row.ticker}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(DataGridDemo, \"xWppMESNLhZNLjiH8t/CESCJaQ0=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = DataGridDemo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomPagination\");\n$RefreshReg$(_c2, \"DataGridDemo\");","map":{"version":3,"sources":["D:/AUT/4thYear/COMP703_RDProject/Github/SourceCode/tradingvision/src/components/stocktable/test.js"],"names":["React","DataGrid","GridToolbar","gridPageCountSelector","gridPageSelector","useGridApiContext","useGridSelector","createTheme","ThemeProvider","useState","useNavigate","Pagination","darkTheme","palette","primary","main","type","columns","field","headerName","width","rows","id","ticker","ceiling","floor","highest","lowest","match","volume","CustomPagination","apiRef","page","pageCount","event","value","current","setPage","DataGridDemo","history","click","setClick","handleOnClick","param","height","sorting","sortModel","sort","color","font","display","fontWeight","border","backgroundColor","Toolbar","params","row"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n    DataGrid,\r\n    GridToolbar,\r\n    gridPageCountSelector,\r\n    gridPageSelector,\r\n    useGridApiContext,\r\n    useGridSelector,\r\n} from '@mui/x-data-grid';\r\nimport { \r\n    createTheme,\r\n    ThemeProvider,\r\n    } from '@mui/material/styles';\r\nimport {useState} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n\r\n\r\nconst columns = [\r\n    {\r\n      field: 'ticker',\r\n      headerName: 'Ticker',\r\n      width: 150,\r\n      \r\n    },\r\n    {\r\n        field: 'ceiling',\r\n        headerName: 'Ceiling',\r\n        type: 'number',\r\n        width: 150,\r\n        \r\n      },\r\n    {\r\n      field: 'floor',\r\n      headerName: 'Floor',\r\n      type: 'number',\r\n      width: 150,\r\n     \r\n    },\r\n    {\r\n      field: 'highest',\r\n      headerName: 'Highest',\r\n      type: 'number',\r\n      width: 150,\r\n      \r\n    },\r\n    {\r\n      field: 'lowest',\r\n      headerName: 'Lowest',\r\n      type: 'number',\r\n      width: 150,\r\n      \r\n    },\r\n    {\r\n      field: 'match',\r\n      headerName: 'Match',\r\n      type: 'number',\r\n      width: 150,\r\n      \r\n    },\r\n    {\r\n      field: 'volume',\r\n      headerName: 'Volume',\r\n      type: 'number',\r\n      width: 150,\r\n    \r\n    },\r\n  ];\r\n  const rows = [\r\n    { id: 1, ticker: 'ACB', ceiling: 305, floor: 3.7, highest: 67, lowest: 4.3, match: 0.4, volume: 2300 },\r\n    { id: 2, ticker: 'ASM', ceiling: 262, floor: 16.0, highest: 24, lowest: 6.0, match: 4.8, volume: 900 },\r\n    { id: 3, ticker: 'BVH', ceiling: 375, floor: 0.0, highest: 94, lowest: 0.0, match: 1.4, volume: 1000 },\r\n    { id: 3, ticker: 'DGC', ceiling: 318, floor: 0.0, highest: 81, lowest: 2.0, match: 4.8, volume: 1500 },\r\n\r\n    { id: 4, ticker: 'BCM', ceiling: 159, floor: 6.0, highest: 24, lowest: 4.0,match: 9.3,volume: 1200},\r\n    { id: 5, ticker: 'BHN', ceiling: 356, floor: 16.0, highest: 49, lowest: 3.9,match: 1.4,volume: 700},\r\n    \r\n  ]; \r\n  function CustomPagination() {\r\n    const apiRef = useGridApiContext();\r\n    const page = useGridSelector(apiRef, gridPageSelector);\r\n    const pageCount = useGridSelector(apiRef, gridPageCountSelector);\r\n  \r\n    return (\r\n      <Pagination\r\n        color=\"primary\"\r\n        count={pageCount}\r\n        page={page + 1}\r\n        onChange={(event, value) => apiRef.current.setPage(value - 1)}\r\n      />\r\n    );\r\n  }\r\n\r\n  export default function DataGridDemo() {\r\n    const history = useNavigate()\r\n    const [click, setClick] = useState(null)\r\n    const handleOnClick = (param)=>{\r\n      (history(`/stocks/${param}`))\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{ height: 400, width: '100%'}}>\r\n\r\n        <DataGrid\r\n            initialState={{\r\n                sorting: {\r\n                  sortModel: [{ field: 'ticker', sort: 'asc' }],\r\n                },\r\n              }}\r\n            sx={{\r\n                color: 'white',\r\n                font: \"Monsterrat\",\r\n                display:'flex',\r\n                fontWeight: 'bold',\r\n                border: null,\r\n                backgroundColor: 'black'\r\n                }}\r\n            rows={rows}\r\n            columns={columns}\r\n\r\n            components={{\r\n            Toolbar: GridToolbar,\r\n            color: 'white',\r\n            }}\r\n            pagination = {{\r\n              color: 'white'\r\n            }}\r\n            onRowClick={(params) => \r\n              history(`/stocks/${params.row.ticker}`)\r\n            }\r\n\r\n        />\r\n        </div>\r\n\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}